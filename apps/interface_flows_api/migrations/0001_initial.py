# Generated by Django 4.2.11 on 2024-04-07 18:39

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Flow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.TextField()),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("VR", "Verified"), ("MD", "Moderation")],
                        default="MD",
                        max_length=2,
                    ),
                ),
                (
                    "visibility",
                    models.CharField(
                        choices=[("PB", "Public"), ("PV", "Private")],
                        default="PB",
                        max_length=2,
                    ),
                ),
                ("date", models.DateField(auto_now_add=True)),
                (
                    "flow_thumbnail_url",
                    models.ImageField(
                        default="flows//thumbnail.png", upload_to="flows/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(max_length=64, unique=True)),
                (
                    "genre_icon_url",
                    models.ImageField(default="icons//icon.png", upload_to="icons/"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Platform",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(max_length=64, unique=True)),
                (
                    "platform_icon_url",
                    models.ImageField(default="icons//icon.png", upload_to="icons/"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ScreenVisualProperties",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("width", models.IntegerField(default=480)),
                ("height", models.IntegerField(default=270)),
            ],
            options={
                "unique_together": {("width", "height")},
            },
        ),
        migrations.CreateModel(
            name="Screen",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("flow_screen_number", models.IntegerField()),
                (
                    "image",
                    models.ImageField(
                        default="screens//screen.jpg", upload_to="screens/"
                    ),
                ),
                ("position_x", models.IntegerField(default=0)),
                ("position_y", models.IntegerField(default=0)),
                (
                    "flow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="screens",
                        to="interface_flows_api.flow",
                    ),
                ),
            ],
            options={
                "ordering": ["position_y", "position_x"],
                "unique_together": {("flow", "flow_screen_number")},
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "profile_photo_url",
                    models.ImageField(
                        default="profiles//profile.png", upload_to="profiles/"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="flow",
            name="author",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="user_flows",
                to="interface_flows_api.profile",
            ),
        ),
        migrations.AddField(
            model_name="flow",
            name="genres",
            field=models.ManyToManyField(
                blank=True, related_name="genres", to="interface_flows_api.genre"
            ),
        ),
        migrations.AddField(
            model_name="flow",
            name="platforms",
            field=models.ManyToManyField(
                blank=True, related_name="platforms", to="interface_flows_api.platform"
            ),
        ),
        migrations.AddField(
            model_name="flow",
            name="screens_properties",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="flows_visual_properties",
                to="interface_flows_api.screenvisualproperties",
            ),
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(max_length=240)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="interface_flows_api.profile",
                    ),
                ),
                (
                    "flow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="commented_by",
                        to="interface_flows_api.flow",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Like",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "flow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="liked_by",
                        to="interface_flows_api.flow",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes",
                        to="interface_flows_api.profile",
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "flow")},
            },
        ),
        migrations.CreateModel(
            name="Connection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bidirectional", models.BooleanField(default=False)),
                (
                    "screen_in",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="connections_in",
                        to="interface_flows_api.screen",
                    ),
                ),
                (
                    "screen_out",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="connections_out",
                        to="interface_flows_api.screen",
                    ),
                ),
            ],
            options={
                "unique_together": {("screen_out", "screen_in")},
            },
        ),
    ]
